<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(SolutionDir)\build</MSBuildCommunityTasksPath>
  </PropertyGroup>
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets" />
  <PropertyGroup>
    <QUnitTestsFolder>Tests</QUnitTestsFolder>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{95189D2C-5919-4DFD-A243-EEAD6DFF401D}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>EndGate.Core.JS.Tests</RootNamespace>
    <AssemblyName>EndGate.Core.JS.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <UseIISExpress>true</UseIISExpress>
    <IISExpressSSLPort />
    <IISExpressAnonymousAuthentication />
    <IISExpressWindowsAuthentication />
    <IISExpressUseClassicPipelineMode />
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Web.DynamicData" />
    <Reference Include="System.Web.Entity" />
    <Reference Include="System.Web.ApplicationServices" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Web" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.EnterpriseServices" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="index.html" />
    <Content Include="packages.config" />
    <None Include="Scripts\jquery-2.0.0.intellisense.js" />
    <Content Include="Scripts\endgate.d.ts" />
    <Content Include="Scripts\endgate.js" />
    <Content Include="Scripts\jquery-2.0.0.js" />
    <Content Include="Scripts\jquery-2.0.0.min.js" />
    <Content Include="Scripts\qunit.extensions.js" />
    <Content Include="Scripts\qunit.js" />
    <Content Include="Scripts\_references.js" />
    <Content Include="Styles\qunit.css" />
    <TypeScriptCompile Include="Tests\Assets.ts" />
    <Content Include="Tests\Assets.js">
      <DependentUpon>Assets.ts</DependentUpon>
    </Content>
    <Content Include="Tests\Assets\Matrixes\Matrix2x2Facts.js" />
    <Content Include="Tests\Assets\Sizes\Size2dFacts.js" />
    <Content Include="Tests\Assets\TimeSpanFacts.js" />
    <Content Include="Tests\Assets\Vectors\Vector2dFacts.js" />
    <Content Include="Tests\Assets\Vectors\Vector2dHelperFacts.js" />
    <Content Include="Tests\BoundingObject\BoundingCircleFacts.js" />
    <Content Include="Tests\BoundingObject\BoundingRectangleFacts.js" />
    <Content Include="Tests\Collision\CollisionManagerFacts.js" />
    <Content Include="Tests\GameFacts.js" />
    <Content Include="Tests\Graphics\Sprites\Animation\SpriteAnimationFacts.js" />
    <Content Include="Tests\Loopers\RepaintLooperFacts.js" />
    <Content Include="Tests\Rendering\Renderer2dFacts.js" />
    <Content Include="Tests\Rendering\Scene2dFacts.js" />
    <Content Include="Tests\Utilities\EventHandlerFacts.js" />
    <Content Include="Tests\Loopers\LooperFacts.js" />
    <Content Include="Tests\Utilities\NoopTripInvokerFacts.js" />
    <Content Include="Web.config" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Tests\Assets.js.map">
      <DependentUpon>Assets.ts</DependentUpon>
    </Content>
    <Content Include="Scripts\jquery-2.0.0.min.map" />
    <None Include="Web.Debug.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Web.Release.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup />
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets" Condition="false" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>True</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>11480</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:6042/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptIncludeComments>true</TypeScriptIncludeComments>
    <TypeScriptSourceMap>true</TypeScriptSourceMap>
    <TypeScriptEnableCompileOnSave>true</TypeScriptEnableCompileOnSave>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptIncludeComments>true</TypeScriptIncludeComments>
    <TypeScriptSourceMap>true</TypeScriptSourceMap>
    <TypeScriptEnableCompileOnSave>true</TypeScriptEnableCompileOnSave>
  </PropertyGroup>
  <UsingTask TaskName="BuildScriptTags" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <ProjectDirectory Required="true" />
      <RelativePath Required="true" />
      <ScriptTagsOutput Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Web" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Code Type="Fragment" Language="cs"><![CDATA[
            ScriptTagsOutput = "";
            DirectoryInfo dirInfo = new DirectoryInfo(ProjectDirectory + "\\" + RelativePath.Replace("/", "\\"));
            FileInfo[] fileInfos = dirInfo.GetFiles("*.js", SearchOption.AllDirectories);

            foreach (FileInfo f in fileInfos)
            {
                if(!f.Name.EndsWith(".min.js"))
                {
                    var scriptTag = "<script type=\"text/javascript\" src=\"";
                    scriptTag += Uri.UnescapeDataString(f.FullName.Replace(ProjectDirectory + "\\", "").Replace("\\","/")) + "\"></script>";
                
                    ScriptTagsOutput += scriptTag+"\n";
                }
            }
    ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="BeforeBuild">
    <Delete Files="Scripts\endgate.d.ts" />
    <Delete Files="Scripts\endgate.js" />
    <Copy SourceFiles="$(SolutionDir)EndGate.Core.JS\Scripts\endgate.d.ts" DestinationFiles="Scripts\endgate.d.ts" Condition=" '$(OS)' == 'Windows_NT' " />
    <Copy SourceFiles="$(SolutionDir)EndGate.Core.JS\Scripts\endgate.js" DestinationFiles="Scripts\endgate.js" Condition=" '$(OS)' == 'Windows_NT' " />
  </Target>
  <Target Name="AfterBuild">
    <BuildScriptTags ProjectDirectory="$(MSBuildProjectDirectory)" RelativePath="$(QUnitTestsFolder)">
      <Output PropertyName="JSTests" TaskParameter="ScriptTagsOutput" />
    </BuildScriptTags>
    <FileUpdate Files="index.html" Regex="&lt;!-- ##JS## --&gt;((.|\r|\n)*?)&lt;!-- ##JS## --&gt;" ReplacementText="&lt;!-- ##JS## --&gt;$(JSTests)&lt;!-- ##JS## --&gt;" Condition=" '$(OS)' == 'Windows_NT'" />
  </Target>
  <Import Project="$(SolutionDir)\build\Microsoft.TypeScript.targets" Condition="Exists('$(SolutionDir)\build\Microsoft.TypeScript.targets')" />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>